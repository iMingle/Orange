<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.mingle</groupId>
  <artifactId>practice</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  
  <name>orange</name>
  <description>the orange project</description>
  
  <developers>
  	<developer>
  		<id>jinml</id>
  		<name>JinMinglei</name>
  		<email>jinminglei@yeah.net</email>
  		<roles>
  			<role>main engineer</role>
  		</roles>
  		<timezone>UTC+08:00</timezone>
  	</developer>
  </developers>
  
  <!-- 属性 -->
  <properties>
  	<!-- encoding -->
	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	
	<!-- version info -->
	<arithmetic.version>4.0</arithmetic.version>
	<itextpdf.version>5.5.1</itextpdf.version>
	<junit.version>4.11</junit.version>
	<guava.version>18.0</guava.version>
	<quartz.version>2.2.1</quartz.version>
	<slf4j.version>1.6.6</slf4j.version>
	<lucene.version>4.10.0</lucene.version>
	<mvel.version>2.2.2.Final</mvel.version>
	<rhino.version>1.7R4</rhino.version>
	<jackson.version>2.5.1</jackson.version>
	<ehcache.version>2.9.1</ehcache.version>
	<xom.version>1.2.10</xom.version>
	<javassist.version>3.19.0-GA</javassist.version>
	<commons-lang3.version>3.4</commons-lang3.version>
	<commons-io.version>2.4</commons-io.version>
	<gson.version>2.3.1</gson.version>
	<javatuples.version>1.2</javatuples.version>
	<joda-time.version>2.8.2</joda-time.version>
	<lombok.version>1.16.4</lombok.version>
	<jooq.version>3.6.2</jooq.version>
	<assertj-core.version>3.1.0</assertj-core.version>
	
	<compiler.version>1.8</compiler.version>
  </properties>
  
  <dependencies>
  	<!-- 算法第4版 -->
  	<dependency>
  		<groupId>org.mingle.arithmetic</groupId>
  		<artifactId>algs</artifactId>
  		<version>${arithmetic.version}</version>
  	</dependency>
  	<dependency>
  		<groupId>org.mingle.arithmetic</groupId>
  		<artifactId>stdlib</artifactId>
  		<version>${arithmetic.version}</version>
  	</dependency>
  	
	<!-- PDF导出 -->
  	<dependency>
  		<groupId>com.itextpdf</groupId>
  		<artifactId>itextpdf</artifactId>
  		<version>${itextpdf.version}</version>
  	</dependency>
  	
  	<!-- 单元测试 -->
  	<dependency>
  		<groupId>junit</groupId>
  		<artifactId>junit</artifactId>
  		<version>${junit.version}</version>
  	</dependency>
  	
  	<!-- google guava lib -->
  	<dependency>
		<groupId>com.google.guava</groupId>
		<artifactId>guava</artifactId>
		<version>${guava.version}</version>
	</dependency>
	
	<!-- job scheduling -->
	<dependency>
		<groupId>org.quartz-scheduler</groupId>
		<artifactId>quartz</artifactId>
		<version>${quartz.version}</version>
	</dependency>
	<dependency>
	    <groupId>org.quartz-scheduler</groupId>
	    <artifactId>quartz-jobs</artifactId>
	    <version>${quartz.version}</version>
	</dependency>
	
	<!-- 全文检索 -->
	<dependency>
		<groupId>org.apache.lucene</groupId>
		<artifactId>lucene-core</artifactId>
		<version>${lucene.version}</version>
	</dependency>
	<!-- 词法分析和语言处理 -->
	<dependency>
		<groupId>org.apache.lucene</groupId>
		<artifactId>lucene-analyzers-common</artifactId>
		<version>${lucene.version}</version>
	</dependency>
	<!-- 对查询语句进行语法分析 -->
	<dependency>
		<groupId>org.apache.lucene</groupId>
		<artifactId>lucene-queryparser</artifactId>
		<version>${lucene.version}</version>
	</dependency>
	<!-- 中文分词 -->
	<dependency>
		<groupId>org.apache.lucene</groupId>
		<artifactId>lucene-analyzers-smartcn</artifactId>
		<version>${lucene.version}</version>
	</dependency>
	
	<!-- 基于Java应用程序的表达式语言 -->
	<dependency>
		<groupId>org.mvel</groupId>
		<artifactId>mvel2</artifactId>
		<version>${mvel.version}</version>
	</dependency>
	
	<!-- 基于Java的JavaScript脚本引擎 -->
	<dependency>
		<groupId>org.mozilla</groupId>
		<artifactId>rhino</artifactId>
		<version>${rhino.version}</version>
	</dependency>
	
	<!-- 用于Java对象和JSON和XML之间的转换 -->
	<dependency>
		<groupId>com.fasterxml.jackson.core</groupId>
		<artifactId>jackson-databind</artifactId>
		<version>${jackson.version}</version>
	</dependency>
	
	<dependency>
		<groupId>com.google.code.gson</groupId>
		<artifactId>gson</artifactId>
		<version>${gson.version}</version>
	</dependency>
	
	<!-- 日志记录 -->
	<dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>slf4j-log4j12</artifactId>
		<version>${slf4j.version}</version>
	</dependency>
	
	<!-- Java Cache框架 -->
	<dependency>
		<groupId>net.sf.ehcache</groupId>
		<artifactId>ehcache</artifactId>
		<version>${ehcache.version}</version>
	</dependency>
	
	<!-- XML解析器 -->
	<dependency>
		<groupId>com.io7m.xom</groupId>
		<artifactId>xom</artifactId>
		<version>${xom.version}</version>
	</dependency>
	
	<!-- 分析、编辑和创建Java字节码的类库 -->
	<dependency>
		<groupId>org.javassist</groupId>
		<artifactId>javassist</artifactId>
		<version>${javassist.version}</version>
	</dependency>
	
	<!-- Apache Commons Lang, a package of Java utility classes for the classes 
	that are in java.lang's hierarchy, or are considered to be so standard as to 
	justify existence in java.lang. -->
	<dependency>
		<groupId>org.apache.commons</groupId>
		<artifactId>commons-lang3</artifactId>
		<version>${commons-lang3.version}</version>
	</dependency>
	
	<!-- The Commons IO library contains utility classes, stream implementations, 
	file filters, file comparators, endian transformation classes, and much more. -->
	<dependency>
		<groupId>commons-io</groupId>
		<artifactId>commons-io</artifactId>
		<version>${commons-io.version}</version>
	</dependency>
	
	<!-- Java library for tuples in Java -->
	<dependency>
		<groupId>org.javatuples</groupId>
		<artifactId>javatuples</artifactId>
		<version>${javatuples.version}</version>
	</dependency>
	
	<!-- Date and time library to replace JDK date handling -->
	<dependency>
		<groupId>joda-time</groupId>
		<artifactId>joda-time</artifactId>
		<version>${joda-time.version}</version>
	</dependency>
	
	<!-- Spice up your java: Automatic Resource Management, automatic generation 
	of getters, setters, equals, hashCode and toString, and more! -->
	<dependency>
		<groupId>org.projectlombok</groupId>
		<artifactId>lombok</artifactId>
		<version>${lombok.version}</version>
	</dependency>
	
	<!-- The easiest way to write SQL in Java -->
	<dependency>
		<groupId>org.jooq</groupId>
		<artifactId>jooq</artifactId>
		<version>${jooq.version}</version>
	</dependency>
	
	<!-- Rich and fluent assertions for testing for Java -->
	<dependency>
		<groupId>org.assertj</groupId>
		<artifactId>assertj-core</artifactId>
		<version>${assertj-core.version}</version>
	</dependency>
	
  </dependencies>
  
  <build>
  	<plugins>
  		<plugin>
  			<groupId>org.apache.maven.plugins</groupId>
  			<artifactId>maven-compiler-plugin</artifactId>
  			<version>3.3</version>
  			<configuration>
  				<compilerId>javac-with-errorprone</compilerId>
        		<forceJavacCompilerUse>true</forceJavacCompilerUse>
        		<compilerVersion>${compiler.version}</compilerVersion>
  				<source>${compiler.version}</source>
  				<target>${compiler.version}</target>
  				<encoding>UTF-8</encoding>
  			</configuration>
  			<dependencies>
		        <dependency>
					<groupId>org.codehaus.plexus</groupId>
					<artifactId>plexus-compiler-javac-errorprone</artifactId>
					<version>2.5</version>
		        </dependency>
		        <dependency>
					<groupId>com.google.errorprone</groupId>
		            <artifactId>error_prone_core</artifactId>
		            <version>2.0.3</version>
				</dependency>
			</dependencies>
  		</plugin>
  	</plugins>
  </build>
</project>